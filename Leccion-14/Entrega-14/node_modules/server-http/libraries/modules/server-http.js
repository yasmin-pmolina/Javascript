/**
 * @license Copyright (c) 2013, CKSource - Frederico Knabben
 * For licensing, see LICENSE
 */

"use strict";

var config = require("configuration-processor").configurationProcessor,
    net = require("net"),
    FileStream = require(__dirname + "/../scripts/Bender/HttpServer/Stream/File"),
    MessageConfiguration = require(__dirname + "/../scripts/Bender/HttpServer/MessageConfiguration"),
    OutcomingResponse = require(__dirname + "/../scripts/Bender/HttpServer/Message/Outcoming/Response"),
    Server = require(__dirname + "/../scripts/Bender/HttpServer/Server"),
    ServerConfiguration = require(__dirname + "/../scripts/Bender/HttpServer/ServerConfiguration"),
    Stream = require(__dirname + "/../scripts/Bender/HttpServer/Stream"),
    Task = require("flow-inspector").Task,
    findAvailablePort; // function

/**
 * See: https://github.com/daaku/nodejs-freeport/blob/master/lib/freeport.js
 *
 * @param {function} callback
 * @return {string}
 */
findAvailablePort = function (callback) {
    var server = net.createServer(),
        port = 0,
        portTask = new Task();

    callback = config.assertOptional(config.expectFunction(), callback);

    server.on("listening", function () {
        portTask.start();
        port = server.address().port;
        server.close();
    });

    server.on("close", function () {
        portTask.done({
            port: port
        });

        if (callback) {
            callback(port);
        }
    });

    server.listen(port);

    return portTask;
};

module.exports = {
    FileStream: FileStream,
    MessageConfiguration: MessageConfiguration,
    OutcomingResponse: OutcomingResponse,
    Server: Server,
    ServerConfiguration: ServerConfiguration,
    Stream: Stream,

    findAvailablePort: findAvailablePort
};
