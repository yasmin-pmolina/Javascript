/**
 * @license Copyright (c) 2013, CKSource - Frederico Knabben
 * For licensing, see LICENSE
 */

"use strict";

var Configuration = require("configuration-processor").Configuration,
    ServerConfiguration; // constructor, function

/**
 * @auguments configuration-processor/Configuration
 * @constructor
 * @param {object} options
 */
ServerConfiguration = function (options) {
    Configuration.call(this, options);
};
ServerConfiguration.prototype = Object.create(Configuration.prototype);

/**
 * This is the number of miliseconds after which server starts killing
 * active connections instead of just asking them to close.
 *
 * @type {number}
 */
ServerConfiguration.DEFAULT_SHUTDOWN_TIMEOUT = 100;

/**
 * @return {function}
 */
ServerConfiguration.prototype.expect = function () {
    return this.expectDefault(this.expectSchema({
        hostname: this.expectOptional(this.expectString()),
        port: this.expectOptional(this.expectInt()),
        shutdownTimeout: this.expectDefault(this.expectInt(), ServerConfiguration.DEFAULT_SHUTDOWN_TIMEOUT),
        socket: this.expectOptional(this.expectString())
    }), {});
};

module.exports = ServerConfiguration;
