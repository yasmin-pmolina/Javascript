/**
 * @license Copyright (c) 2013, CKSource - Frederico Knabben
 * For licensing, see LICENSE
 */

"use strict";

/* global define: false */

(function (factory) {

    if ("function" === typeof define) {
        define([
            "event-dispatcher/EventDispatcher"
        ], factory);
    } else {
        module.exports = factory.apply(null, [
            require("event-dispatcher").EventDispatcher
        ]);
    }

}(function (EventDispatcher) {

    var TaskAggregatorDispatcher; // constructor, function

    /**
     * @auguments event-dispatcher/EventDispatcher
     * @constructor
     */
    TaskAggregatorDispatcher = function () {
        EventDispatcher.call(this);
    };
    TaskAggregatorDispatcher.prototype = Object.create(EventDispatcher.prototype);

    /**
     * @event JsLoader/FlowInspector/TaskAggregatorDispatcher#EVENT_EVERY_DONE
     * @type {object}
     */
    Object.defineProperty(TaskAggregatorDispatcher, "EVENT_EVERY_DONE", {
        enumerable: true,
        value: "event.every_done",
        writable: false
    });

    /**
     * @event JsLoader/FlowInspector/TaskAggregatorDispatcher#EVENT_EVERY_FAIL
     * @type {object}
     */
    Object.defineProperty(TaskAggregatorDispatcher, "EVENT_EVERY_FAIL", {
        enumerable: true,
        value: "event.every_fail",
        writable: false
    });

    /**
     * @event JsLoader/FlowInspector/TaskAggregatorDispatcher#EVENT_EVERY_START
     * @type {object}
     */
    Object.defineProperty(TaskAggregatorDispatcher, "EVENT_EVERY_START", {
        enumerable: true,
        value: "event.every_start",
        writable: false
    });

    /**
     * @event JsLoader/FlowInspector/TaskAggregatorDispatcher#EVENT_EVERY_STOP
     * @type {object}
     */
    Object.defineProperty(TaskAggregatorDispatcher, "EVENT_EVERY_STOP", {
        enumerable: true,
        value: "event.every_stop",
        writable: false
    });

    /**
     * @event JsLoader/FlowInspector/TaskAggregatorDispatcher#EVENT_SOME_DONE
     * @type {object}
     */
    Object.defineProperty(TaskAggregatorDispatcher, "EVENT_SOME_DONE", {
        enumerable: true,
        value: "event.some_done",
        writable: false
    });

    /**
     * @event JsLoader/FlowInspector/TaskAggregatorDispatcher#EVENT_SOME_FAIL
     * @type {object}
     */
    Object.defineProperty(TaskAggregatorDispatcher, "EVENT_SOME_FAIL", {
        enumerable: true,
        value: "event.some_fail",
        writable: false
    });

    /**
     * @event JsLoader/FlowInspector/TaskAggregatorDispatcher#EVENT_SOME_START
     * @type {object}
     */
    Object.defineProperty(TaskAggregatorDispatcher, "EVENT_SOME_START", {
        enumerable: true,
        value: "event.some_start",
        writable: false
    });

    /**
     * @event JsLoader/FlowInspector/TaskAggregatorDispatcher#EVENT_SOME_STOP
     * @type {object}
     */
    Object.defineProperty(TaskAggregatorDispatcher, "EVENT_SOME_STOP", {
        enumerable: true,
        value: "event.some_stop",
        writable: false
    });

    /**
     * @param {function} listener
     * @return {void}
     */
    TaskAggregatorDispatcher.prototype.addListenerEveryDone = function (listener) {
        this.addListener(TaskAggregatorDispatcher.EVENT_EVERY_DONE, listener);
    };

    /**
     * @param {function} listener
     * @return {void}
     */
    TaskAggregatorDispatcher.prototype.addListenerEveryFail = function (listener) {
        this.addListener(TaskAggregatorDispatcher.EVENT_EVERY_FAIL, listener);
    };

    /**
     * @param {function} listener
     * @return {void}
     */
    TaskAggregatorDispatcher.prototype.addListenerEveryStart = function (listener) {
        this.addListener(TaskAggregatorDispatcher.EVENT_EVERY_START, listener);
    };

    /**
     * @param {function} listener
     * @return {void}
     */
    TaskAggregatorDispatcher.prototype.addListenerEveryStop = function (listener) {
        this.addListener(TaskAggregatorDispatcher.EVENT_EVERY_STOP, listener);
    };

    /**
     * @param {function} listener
     * @return {void}
     */
    TaskAggregatorDispatcher.prototype.addListenerSomeDone = function (listener) {
        this.addListener(TaskAggregatorDispatcher.EVENT_SOME_DONE, listener);
    };

    /**
     * @param {function} listener
     * @return {void}
     */
    TaskAggregatorDispatcher.prototype.addListenerSomeFail = function (listener) {
        this.addListener(TaskAggregatorDispatcher.EVENT_SOME_FAIL, listener);
    };

    /**
     * @param {function} listener
     * @return {void}
     */
    TaskAggregatorDispatcher.prototype.addListenerSomeStart = function (listener) {
        this.addListener(TaskAggregatorDispatcher.EVENT_SOME_START, listener);
    };

    /**
     * @param {function} listener
     * @return {void}
     */
    TaskAggregatorDispatcher.prototype.addListenerSomeStop = function (listener) {
        this.addListener(TaskAggregatorDispatcher.EVENT_SOME_STOP, listener);
    };

    /**
     * @return {array}
     */
    TaskAggregatorDispatcher.prototype.getSupportedEvents = function () {
        return [
            TaskAggregatorDispatcher.EVENT_EVERY_DONE,
            TaskAggregatorDispatcher.EVENT_EVERY_FAIL,
            TaskAggregatorDispatcher.EVENT_EVERY_START,
            TaskAggregatorDispatcher.EVENT_EVERY_STOP,
            TaskAggregatorDispatcher.EVENT_SOME_DONE,
            TaskAggregatorDispatcher.EVENT_SOME_FAIL,
            TaskAggregatorDispatcher.EVENT_SOME_START,
            TaskAggregatorDispatcher.EVENT_SOME_STOP
        ];
    };

    /**
     * @return {bool|undefined}
     */
    TaskAggregatorDispatcher.prototype.notifyEveryDone = function () {
        this.everyDoneEvent = this.dispatch(TaskAggregatorDispatcher.EVENT_EVERY_DONE);
    };

    /**
     * @return {bool|undefined}
     */
    TaskAggregatorDispatcher.prototype.notifyEveryFail = function () {
        this.everyFailedEvent = this.dispatch(TaskAggregatorDispatcher.EVENT_EVERY_FAIL);
    };

    /**
     * @return {bool|undefined}
     */
    TaskAggregatorDispatcher.prototype.notifyEveryStart = function () {
        this.everyStartedEvent = this.dispatch(TaskAggregatorDispatcher.EVENT_EVERY_START);
    };

    /**
     * @return {bool|undefined}
     */
    TaskAggregatorDispatcher.prototype.notifyEveryStop = function () {
        this.everyStoppedEvent = this.dispatch(TaskAggregatorDispatcher.EVENT_EVERY_STOP);
    };

    /**
     * @return {bool|undefined}
     */
    TaskAggregatorDispatcher.prototype.notifySomeDone = function () {
        this.someDoneEvent = this.dispatch(TaskAggregatorDispatcher.EVENT_SOME_DONE);
    };

    /**
     * @return {bool|undefined}
     */
    TaskAggregatorDispatcher.prototype.notifySomeFail = function () {
        this.someFailEvent = this.dispatch(TaskAggregatorDispatcher.EVENT_SOME_FAIL);
    };

    /**
     * @return {bool|undefined}
     */
    TaskAggregatorDispatcher.prototype.notifySomeStart = function () {
        this.someStartedEvent = this.dispatch(TaskAggregatorDispatcher.EVENT_SOME_START);
    };

    /**
     * @return {bool}
     */
    TaskAggregatorDispatcher.prototype.notifySomeStop = function () {
        this.someStoppedEvent = this.dispatch(TaskAggregatorDispatcher.EVENT_SOME_STOP);
    };

    /**
     * @param {function} listener
     * @return {void}
     */
    // TaskAggregatorDispatcher.prototype.removeListenerEveryDone = function (listener) {
    //     this.removeListener(TaskAggregatorDispatcher.EVENT_EVERY_DONE, listener);
    // };

    /**
     * @param {function} listener
     * @return {void}
     */
    // TaskAggregatorDispatcher.prototype.removeListenerEveryFail = function (listener) {
    //     this.removeListener(TaskAggregatorDispatcher.EVENT_EVERY_FAIL, listener);
    // };

    /**
     * @param {function} listener
     * @return {void}
     */
    // TaskAggregatorDispatcher.prototype.removeListenerEveryStart = function (listener) {
    //     this.removeListener(TaskAggregatorDispatcher.EVENT_EVERY_START, listener);
    // };

    /**
     * @param {function} listener
     * @return {void}
     */
    // TaskAggregatorDispatcher.prototype.removeListenerEveryStop = function (listener) {
    //     this.removeListener(TaskAggregatorDispatcher.EVENT_EVERY_STOP, listener);
    // };

    /**
     * @param {function} listener
     * @return {void}
     */
    TaskAggregatorDispatcher.prototype.removeListenerSomeDone = function (listener) {
        this.removeListener(TaskAggregatorDispatcher.EVENT_SOME_DONE, listener);
    };

    /**
     * @param {function} listener
     * @return {void}
     */
    TaskAggregatorDispatcher.prototype.removeListenerSomeFail = function (listener) {
        this.removeListener(TaskAggregatorDispatcher.EVENT_SOME_FAIL, listener);
    };

    /**
     * @param {function} listener
     * @return {void}
     */
    TaskAggregatorDispatcher.prototype.removeListenerSomeStart = function (listener) {
        this.removeListener(TaskAggregatorDispatcher.EVENT_SOME_START, listener);
    };

    /**
     * @param {function} listener
     * @return {void}
     */
    TaskAggregatorDispatcher.prototype.removeListenerSomeStop = function (listener) {
        this.removeListener(TaskAggregatorDispatcher.EVENT_SOME_STOP, listener);
    };

    return TaskAggregatorDispatcher;

}));
